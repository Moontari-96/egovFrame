<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.example.admin.boards.service.impl.boardsMapper">
	<select id="findByBoard" resultType="map">
        select 
            p.post_id,
            p.board_id,
            b.board_nm,
            p.title,
            p.created_by_id,
            p.created_at,
            p.views
        from 
        	post_info p
        join 
        	board_info b ON b.board_id = p.board_id
        where 
        	p.board_id = #{boardId}
        and 
        	status != 'deleted'
		<if test="keyword != null and keyword != ''">
		  and (
		    p.title like concat('%', #{keyword}, '%')
		    or 
		    p.content like concat('%', #{keyword}, '%')
		  )
		</if>
        order by 
        	p.created_at desc, p.post_id desc
        limit 
        	#{size} 
        offset
        	#{offset}
    </select>
	
	<select id="countByBoard" parameterType="map" resultType="int">
    	select 
			count(*)
		from 
			post_info 
		where 
			board_id = #{boardId}
		and 
		  	status != 'deleted'
		<if test="keyword != null and keyword != ''">
		  and (
		    title like concat('%', #{keyword}, '%')
		    or 
		    content like concat('%', #{keyword}, '%')
		  )
		</if>
	</select>
	
	<select id="getPostDetail" parameterType="string" resultType="PostVO">
      	select 
			*
		from
			post_info
		where
			post_id = #{postId}
		and
			status != 'deleted';
	</select>
	
	<update id="updatePost" parameterType="PostVO">
		update 
			post_info
		set
			title = #{title},
			content = #{content},
			update_by_id = #{updateById},
			updated_at = now()
		where 
			post_id = #{postId}
	</update>
	
	<update id="deletePost" parameterType="map">
		update
			post_info
		set
			status = 'deleted',
			update_by_id = #{userId},
	        updated_at = NOW()
		where
			post_id = #{postId}
	</update>

	<insert id="createPost" parameterType="PostVO">
	    <selectKey keyProperty="postId" resultType="Long" order="AFTER">
	        select last_insert_id()
	    </selectKey>
	
		insert into 
			post_info (board_id, created_by_id, title, content)
		values
			(#{boardId}, #{createdById}, #{title}, #{content});
	</insert>
</mapper>